// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3824.Promobot.subsystems;

import org.usfirst.frc3824.Promobot.Constants;
import org.usfirst.frc3824.Promobot.Robot;
import org.usfirst.frc3824.Promobot.RobotMap;
import org.usfirst.frc3824.Promobot.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class HumanSafetySensor extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    AnalogInput batSensor = RobotMap.humanSafetySensorBatSensor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    private double voltage;
    private double range;
    
    public static boolean override;
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public AnalogInput getBatSensor() {
    	
    	return batSensor;
    	
    }
    
    public boolean spiderSense() {
    	
    	 voltage = Robot.humanSafetySensor.getBatSensor().getVoltage();
    	 range = (voltage/Constants.SCALED_VOLTAGE_PER_INCH) * 10;
    	 
    	 if (range <= Constants.MAX_RANGE) {
    		 
    		 if (override == false) {
    			 
    			 return true; 
    		 }
    		 else {
    			 
    			 return false; 
    		 } 
    	 }
    	 else {
    		 
    		 return false;	 
    	 }	
    }
    
    public void override() {
    	
    	override = true;
    	
    }
    
    public void deoverride() {
    	
    	override = false;
    	
    }
}

